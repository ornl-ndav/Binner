#!/usr/bin/env python

import dircache
import drplot
import numpy
import pylab

starttime = []
hostname = []
jobtime = []
rebintime = []
rebinvol = []
rebinthp_ps = []
rebinthp_tot = []
recordedcnts = []
rebinbatchsize = []
bins = []
inputtime = []
outputtime = []
realtime = []
usertime = []
systime = []

def get_col_val(istr, **kwargs):
    units = kwargs.get('units', False)
    thp = kwargs.get('thp', False)
    percent = kwargs.get('percent', False)
    stime = kwargs.get('stime', False)

    parts = istr.split(':')
    
    if units:
        return parts[-1].split()[0].strip()

    if thp:
        return parts[-1].split()[3].strip()

    if percent:
        return parts[-1].split()[0].strip().strip('%')

    if stime:
        min = float(istr.split()[-1].split('m')[0])
        sec = float(istr.split()[-1].split('m')[1].rstrip('s'))
        return sec + (min * 60.0)

    return parts[-1]

for ifile in dircache.listdir('.'):
    if not ifile.endswith('.out'):
        continue

    ifileh = open(ifile, 'r')
    ilines = ifileh.readlines()
    ifileh.close()

    for iline in ilines:
        if "Start" in iline:
            starttime.append(int(get_col_val(iline)))
        elif "Hostname" in iline:
            hostname.append(get_col_val(iline))
        elif "recorded total cnt" in iline:
            recordedcnts.append(float(get_col_val(iline)))
        elif "Job Time" in iline:
            jobtime.append(int(get_col_val(iline)))
        elif "all bins" in iline:
            bins.append(int(get_col_val(iline)))
        elif "rebin time" in iline:
            rebintime.append(float(get_col_val(iline, units=True)))
        elif "batch size" in iline:
            rebinbatchsize.append(int(get_col_val(iline, units=True)))
        elif "rebin throughput" in iline:
            rebinthp_ps.append(float(get_col_val(iline, units=True)))
            rebinthp_tot.append(int(get_col_val(iline, thp=True)))
        elif "rebinned volume" in iline:
            rebinvol.append(float(get_col_val(iline, percent=True)))
        elif "real" in iline:
            realtime.append(get_col_val(iline, stime=True))
        elif "user" in iline:
            usertime.append(get_col_val(iline, stime=True))
        elif "sys" in iline:
            systime.append(get_col_val(iline, stime=True))
        elif "output time" in iline:
            outputtime.append(float(get_col_val(iline, units=True)))
        elif "input time" in iline:
            inputtime.append(float(get_col_val(iline, units=True)))
            
xaxis = numpy.arange(len(starttime))

f1 = pylab.figure(1)
pylab.subplot(4,5,1)
drplot.plot_1D_arr(xaxis, numpy.array(jobtime), xlabel="Slice ID",
                   ylabel="Job Time (sec)")
pylab.subplot(4,5,2)
drplot.plot_1D_arr(xaxis, numpy.array(rebintime), xlabel="Slice ID",
                   ylabel="Rebin Time (sec)")
pylab.subplot(4,5,3)
drplot.plot_1D_arr(xaxis, numpy.array(starttime), xlabel="Slice ID",
                   ylabel="Start Time (Unix sec)")
pylab.subplot(4,5,4)
drplot.plot_1D_arr(xaxis, numpy.array(rebinthp_ps), xlabel="Slice ID",
                   ylabel="Rebin Throughput (pix/sec)")
pylab.subplot(4,5,5)
drplot.plot_1D_arr(xaxis, numpy.array(rebinthp_tot), xlabel="Slice ID",
                   ylabel="Rebin Throughput (total)")
pylab.subplot(4,5,6)
drplot.plot_1D_arr(xaxis, numpy.array(rebinvol), xlabel="Slice ID",
                   ylabel="Rebin Volume (% occ)")
pylab.subplot(4,5,7)
drplot.plot_1D_arr(xaxis, numpy.array(recordedcnts), xlabel="Slice ID",
                   ylabel="Recorded Total Counts")
pylab.subplot(4,5,8)
drplot.plot_1D_arr(xaxis, numpy.array(inputtime), xlabel="Slice ID",
                   ylabel="Input Time (sec)")
pylab.subplot(4,5,9)
drplot.plot_1D_arr(xaxis, numpy.array(outputtime), xlabel="Slice ID",
                   ylabel="Output Time (sec)")
pylab.subplot(4,5,10)
drplot.plot_1D_arr(xaxis, numpy.array(realtime), xlabel="Slice ID",
                   ylabel="Real Time (sec)")
pylab.subplot(4,5,11)
drplot.plot_1D_arr(xaxis, numpy.array(usertime), xlabel="Slice ID",
                   ylabel="User Time (sec)")
pylab.subplot(4,5,12)
drplot.plot_1D_arr(xaxis, numpy.array(systime), xlabel="Slice ID",
                   ylabel="Sys Time (sec)")
pylab.subplot(4,5,13)
drplot.plot_1D_arr(xaxis, numpy.array(bins), xlabel="Slice ID",
                   ylabel="Bins")
pylab.subplot(4,5,14)
drplot.plot_1D_arr(xaxis, numpy.array(rebinbatchsize), xlabel="Slice ID",
                   ylabel="Rebin Batch Size")
pylab.subplot(4,5,15)
drplot.plot_1D_arr(numpy.array(jobtime), numpy.array(rebintime),
                   xlabel="Job Time (sec)", ylabel="Rebin Time (sec)")
pylab.subplot(4,5,16)
drplot.plot_1D_arr(numpy.array(rebintime), numpy.array(recordedcnts),
                   xlabel="Rebin Time (sec)", ylabel="Recorded Total Counts")
pylab.subplot(4,5,17)
drplot.plot_1D_arr(numpy.array(rebintime), numpy.array(rebinthp_ps),
                   xlabel="Rebin Time (sec)",
                   ylabel="Rebin Throughput (pix/sec)")
pylab.subplot(4,5,18)
drplot.plot_1D_arr(numpy.array(rebintime), numpy.array(rebinvol),
                   xlabel="Rebin Time (sec)",
                   ylabel="Rebin Volume (% occ)")
pylab.subplot(4,5,19)
drplot.plot_1D_arr(numpy.array(rebinthp_ps), numpy.array(rebinvol),
                   xlabel="Rebin Throughput (pix/sec)",
                   ylabel="Rebin Volume (% occ)")
pylab.show()
